---
import '../styles/index.css';

import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import Icon from '../components/Icon.astro';
import { getCollection, getEntry, render, type CollectionEntry } from 'astro:content';
import { name, openGraph } from 'spectre:globals';
import glueLogo from '@/assets/glue-logo.svg';

// Fetch portfolio (formerly projects)
console.log('Attempting to fetch "portfolio" collection STANDALONE...');
const standalonePortfolioCollection: CollectionEntry<'portfolio'>[] = await getCollection('portfolio');
console.log('Standalone Portfolio Collection from index.astro:', standalonePortfolioCollection);

const [posts, articles] = await Promise.all([
	getCollection('posts', (post) => post.data.draft !== true),
	getCollection('articles'),
]);

// Use standalonePortfolioCollection
console.log('Portfolio Collection (from standalone fetch) in index.astro:', standalonePortfolioCollection);

// Sort articles to find the latest one
const sortedArticles = articles.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
const latestArticle = sortedArticles.length > 0 ? sortedArticles[0] : null;

// Render the latest article's content if it exists
const { Content: LatestArticleContent } = latestArticle ? await render(latestArticle) : { Content: null };

// Sort portfolio items by title
const sortedPortfolioItems = standalonePortfolioCollection && standalonePortfolioCollection.length > 0 
  ? standalonePortfolioCollection.sort((a, b) => a.data.title.localeCompare(b.data.title))
  : [];
console.log('Sorted Portfolio Items for homepage (from standalone fetch):', sortedPortfolioItems);

// Get the first portfolio item to display (since schema is minimal)
const firstPortfolioItem = sortedPortfolioItems.length > 0 ? sortedPortfolioItems[0] : null;

---

<Layout title={name} description={openGraph.description} pagefindIgnore>
	<div slot="left" class="fade-in">
		<Card class="col-span-2">
			<a href="/about" class="block p-6">
				<div class="flex items-center mb-4">
					<Icon name="logo" class="w-12 h-12 mr-3 text-primary" />
					<h2 class="text-2xl font-bold">ParadiseLabs</h2>
				</div>
				<p class="text-muted-foreground">
					Who we are, What we are doing, and what the future of AI looks like...
				</p>
				<div class="flex space-x-3 mt-4">
					<Icon name="github" class="w-5 h-5 text-muted-foreground hover:text-foreground" />
					<Icon name="twitter" class="w-5 h-5 text-muted-foreground hover:text-foreground" />
					<Icon name="discord" class="w-5 h-5 text-muted-foreground hover:text-foreground" />
				</div>
			</a>
		</Card>

		<!-- Featured Article Section -->
		{latestArticle && (
			<Card class="col-span-2">
				<a href={`/articles/${latestArticle.slug}`} class="block p-6">
					<h3 class="text-xs uppercase text-primary font-semibold mb-2">
						Featured Article
					</h3>
					<h2 class="text-2xl font-bold mb-2">{latestArticle.data.title}</h2>
					{LatestArticleContent && (
						<div class="prose dark:prose-invert max-w-none text-muted-foreground line-clamp-3">
							<LatestArticleContent />
						</div>
					)}
					<span class="inline-block mt-4 text-primary hover:underline">
						Continue Reading &rarr;
					</span>
				</a>
			</Card>
		)}
	</div>

	<div slot="right" class="fade-in-delay">
		<Card class="col-span-2">
			<div class="p-6">
				<h2 class="text-xl font-semibold mb-4">Portfolio</h2> {/* Changed title */}
				{firstPortfolioItem ? (
					// Simplified display for minimal schema
					<div class="block p-4 border rounded-lg">
						<h3 class="font-semibold text-lg">{firstPortfolioItem.data.title}</h3>
						{/* Add link or more details here if schema expands */}
					</div>
				) : (
					<p class="text-muted-foreground">Portfolio details coming soon...</p>
				)}
			</div>
		</Card>

		<Card class="col-span-2">
			<div class="p-6">
				<div class="flex items-center justify-between mb-4">
					<h2 class="text-xl font-semibold">Latest Posts</h2>
					<a href="/blog" class="text-sm text-primary hover:underline">View all</a>
				</div>
				<ul class="space-y-4">
					{posts.slice(0, 5).map((post) => (
						<li class="border-b border-muted/30 pb-4 last:border-b-0 last:pb-0">
							<a href={`/blog/${post.slug}/`} class="block group">
								<div class="flex justify-between items-start">
									<h3 class="font-medium group-hover:text-primary transition-colors">
										{post.data.title}
									</h3>
									<time datetime={post.data.date.toISOString()} class="text-xs text-muted-foreground whitespace-nowrap pl-4">
										{new Date(post.data.date).toLocaleDateString('en-US', { year: 'numeric', month: 'numeric', day: 'numeric' })}
									</time>
								</div>
								{post.data.description && <p class="text-sm text-muted-foreground mt-1 line-clamp-2">{post.data.description}</p>}
							</a>
						</li>
					))}
				</ul>
			</div>
		</Card>
	</div>
</Layout>
