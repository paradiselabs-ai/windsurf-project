---
import '../styles/index.css';

import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import Icon from '../components/Icon.astro';
import { getCollection, render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';
// No need to import individual logos anymore

const [posts, articles] = await Promise.all([
	getCollection('posts', (post) => post.data.draft !== true),
	getCollection('articles'),
]);

// Hardcode projects data directly in the template
const projects = [
  {
    title: "GLUE Framework",
    description: "An open-source framework for building agentic AI applications.",
    logo: "glue-logo.svg",
    url: "https://github.com/paradiselabs-ai/GLUE-fw",
    order: 1
  }
];

// Sort articles to find the latest one
const sortedArticles = articles.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
const latestArticle = sortedArticles.length > 0 ? sortedArticles[0] : null;

// Render the latest article's content if it exists
const { Content: LatestArticleContent } = latestArticle ? await render(latestArticle) : { Content: null };

---

<Layout
	title={openGraph.home.title || name}
	description={openGraph.home.description}
	pagefindIgnore
>
	<div class="layout-grid-left" slot="left">
		<Card>
			<h2 style="font-size: 1.8em; margin-top: 0; text-align: left;">{name}</h2>
			<p style="margin-top: 0.5rem; margin-bottom: 1rem; text-align: left; font-size: 0.9em; color: var(--color-text-secondary);">Who we are, What we are doing, and what the future of AI looks like...</p>
			<div class="social-icons" style="display: flex; gap: 25px; margin-top: 1rem;">
				<a href="https://github.com/paradiselabs-ai" target="_blank" rel="noopener noreferrer" title="ParadiseLabs GitHub" style="color:var(--color-accent-cyan);">
					<Icon type="lucide" name="github" width={22} height={22} style="vertical-align:middle;" />
				</a>
				<a href="https://twitter.com/paradiselabs_ai" target="_blank" rel="noopener noreferrer" title="ParadiseLabs Twitter" style="color:var(--color-accent-purple);">
					<Icon type="lucide" name="twitter" width={22} height={22} style="vertical-align:middle;" />
				</a>
				<a href="https://discord.gg/uQ69vc4Agc" target="_blank" rel="noopener noreferrer" title="ParadiseLabs Discord" style="color:var(--color-accent-green);">
					<img src="/images/discord.svg" width="22" height="22" style="vertical-align:middle;filter:drop-shadow(0 0 2px var(--color-bg-darkest));" alt="Discord" />
				</a>
			</div>
		</Card>
		<Card>
			<h2 class="no-mt">Projects</h2>
			{/* Sort projects by order if available */}
			{projects
				.sort((a: { order?: number }, b: { order?: number }) => (a.order || 999) - (b.order || 999))
				.map((project: { 
					title: string; 
					description?: string; 
					logo?: string; 
					url: string; 
					order?: number 
				}) => {
					// Construct logo path from the project's logo property
					const logoPath = project.logo ? `/images/projects/${project.logo}` : null;
					
					return (
						<Card style="margin-bottom: 1rem;">
							<div style="display: flex; align-items: center; gap: 1rem;">
								{logoPath && 
									<img src={logoPath} alt={`${project.title} Logo`} width="60" height="60" style="flex-shrink: 0;" />
								}
								<div>
									<h3 style="margin: 0; font-size: 1.2em;">
										<a href={project.url} target="_blank" rel="noopener noreferrer">{project.title}</a>
									</h3>
									{project.description && 
										<p style="margin: 0.3rem 0 0 0; font-size: 0.9em; color: var(--color-text-secondary);">{project.description}</p>
									}
								</div>
							</div>
						</Card>
					);
				})
			}
			{projects.length === 0 && <p>No projects to display yet.</p>}
		</Card>
	</div>
	<div class="layout-grid-right" slot="right">
		{latestArticle && LatestArticleContent && (
			<Card>
				<div class="content-container article-preview">
					<h3 class="no-mt">{latestArticle.data.title}</h3>
					<div class="prose preview-content">
						<LatestArticleContent />
					</div>
					<a href={`/articles/${latestArticle.id}`} class="continue-reading-link">Continue Reading →</a>
				</div>
			</Card>
		)}
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="rss" width={24} height={24} class='glow-icon' />
				<h2>Latest Posts</h2>
			</div>
			<div class="content-container">
				{posts.sort((a, b) => b.data.createdAt.getTime() - a.data.createdAt.getTime()).slice(0, 2).map((post) => (
					<a href={`/blog/${post.id}`} class="post-container">
						<div class="post-header">
							<h3>{post.data.title}</h3>
							<span class="post-date">{post.data.createdAt.toLocaleDateString()}</span>
						</div>
						<span>{post.data.description}</span>
					</a>
				))}
				<a href="/blog" class="view-all-link">View all posts →</a>
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="folder-git" width={24} height={24} class='glow-icon' />
				<h2>Recent Articles</h2> 
			</div>
			<div class="content-container">
				{sortedArticles.slice(0, 2).map((article) => ( 
					<a href={`/articles/${article.id}`} class="post-container">
						<div class="post-header">
							<h3>{article.data.title}</h3>
							<span class="post-date">{article.data.date.toLocaleDateString()}</span>
						</div>
						<span>{article.data.description}</span>
					</a>
				))}
				<a href="/articles" class="view-all-link">View all articles →</a>
			</div>
		</Card>
	</div>
</Layout>

<style>
	.article-preview .preview-content {
		display: -webkit-box;
		-webkit-line-clamp: 5; 
		-webkit-box-orient: vertical;
		overflow: hidden;
		margin-bottom: 1rem;
	}
	.continue-reading-link {
		display: inline-block;
		margin-top: 0.5rem;
	}
	.view-all-link {
		display: block;
		text-align: right;
		margin-top: 1rem;
		font-size: 0.9em;
		color: var(--color-accent-purple);
		text-decoration: none;
	}
	.view-all-link:hover {
		text-decoration: underline;
	}
</style>
